pipeline {
    environment {
    registry = "eureka-server"
    application = "eureka-server"
//    registryCredential = 'dockerhub'
    dockerImage = ''
    }
    
    agent any
    
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
    /*        post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            } */
        }

    stage('SonarQube analysis') {
       // def scannerHome = /usr/share/sonar-scanner-4.1.0.1829;
        withSonarQubeEnv('cicd-scanner') { // If you have configured more than one global server connection, you can specify its name
          // sh "${scannerHome}/bin/sonar-scanner"
            sh "$SONAR_RUNNER_HOME/bin/sonar-scanner"
        }
    }
        
        stage('Build image') {
            steps{
                script {
                    dockerImage = docker.build(registry+":$BUILD_NUMBER",./eureka-server/Dockerfile)
                }
            }
        }

        
 /*       stage('Push Image') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        } */
        stage('Deploy Image') {
            steps{
                sh "set +e; docker rm $application; set -e"
                sh "docker run -d --name $application $registry:$BUILD_NUMBER" 
                }
        
        }  
    }
}
