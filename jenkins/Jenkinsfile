pipeline {
    environment {
    registry = "104.197.202.18:18082"
    application = "eureka-server"
//    registryCredential = 'dockerhub'
    dockerImage = ''
    }
    
    agent any
   
   // } 
    stages {
       stage('CheckOut Project from GitHub') {
          steps {
                git branch: 'master',
		credentialsId: 'GitHub',
		url: 'https://github.com/rmuruge/eureka-group5.git'
		  
		sh 'ls -lrt' 
          }
       }
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            } 
        }

    stage('SonarQube analysis') {
        steps{  
          // def scannerHome = /usr/share/sonar-scanner-4.1.0.1829;
             withSonarQubeEnv('sonarqube') { // If you have configured more than one global server connection, you can specify its name
          //    sh "${scannerHome}/bin/sonar-scanner"
                sh "/usr/share/sonar-scanner-4.1.0.1829/bin/sonar-scanner"
             }    
        }
    }
        
	/** stage("Fix the permission issue") {

            steps {
                sh "sudo chmod 666 /var/run/docker.sock"
            }

        } */
        stage('Build image') {
	 
            steps{
		    script {
                	docker.withRegistry('http://'+registry, 'nexus-credential') {
                    		def dockerImage = docker.build(registry+"/"+application+":$BUILD_NUMBER","./eureka-server/")
				dockerImage.push()
                	} //docker
            	} //script
	 } // steps
        } // stage

        
 /*       stage('Push Image') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        } */
        stage('Deploy Image') {
            steps{
                sh "set +e; docker rm $application; set -e"
                sh "docker run -d --name $application -p 8761:8761 $registry+"/"+application+":$BUILD_NUMBER" 
                }
        
        }  
    }
}
